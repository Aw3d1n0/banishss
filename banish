--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then local v71=0;while true do if (v71==0) then v20=v0(v3(v31,1,1));return "";end end else local v72=0;local v73;while true do if (v72==0) then v73=v2(v0(v31,16));if v20 then local v87=v5(v73,v20);v20=nil;return v87;else return v73;end break;end end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v32=0 + 0 ;local v33;local v34;local v35;local v36;local v37;local v38;while true do if (((8 -6) -1)==v32) then v35=1995 -(1750 + 244) ;v36=(v21(v34,1 + 0 ,(2622 -697) -(707 + 1198) ) * ((1 + 1)^(829 -(626 + 171)))) + v33 ;v32=1 + 1 ;end if (v32==(0 + 0)) then v33=v24();v34=v24();v32=1 + 0 ;end if (v32==(8 -6)) then v37=v21(v34,1 + 20 ,(164 -99) -34 );v38=((v21(v34,352 -(162 + 158) )==(1802 -(632 + 1169))) and  -(1101 -(1001 + 99))) or (2 -1) ;v32=1912 -(1056 + 853) ;end if (v32==(645 -((1470 -(216 + 975)) + 363))) then if (v37==(0 + 0)) then if (v36==(1684 -(1021 + 663))) then return v38 * (0 + (0 -0)) ;else v37=1 + 0 ;v35=(1359 -(1290 + 69)) -0 ;end elseif (v37==(2929 -(580 + 302))) then return ((v36==(343 -(338 + 5))) and (v38 * ((1 + 0 + 0)/(669 -(187 + 482))))) or (v38 * NaN) ;end return v8(v38,v37-(396 + 627) ) * (v35 + (v36/((1 + 1)^(83 -(17 + 14))))) ;end end end v26=nil;function v26(v39)local v40=0;local v41;local v42;while true do if (v40==(5 -3)) then v42={};for v79=1 + 0 , #v41 do v42[v79]=v2(v1(v3(v41,v79,v79)));end v40=6 -3 ;end if (v40==(752 -(573 + 179))) then v41=nil;if  not v39 then v39=v24();if (v39==(0 + 0)) then return "";end end v40=654 -(195 + (1638 -(298 + 882))) ;end if (v40==((2 -1) + 0)) then v41=v3(v16,v19,(v19 + v39) -(1 + 0) );v19=v19 + v39 ;v40=1864 -(1696 + 166) ;end if (v40==(1 + 2)) then return v6(v42);end end end v27=v24;v18=4;end if (v18==2) then function v23()local v43=0 -0 ;local v44;local v45;while true do if (v43==((101 + 1519) -(1044 + (1549 -(819 + 155))))) then return (v45 * (768 -(473 + 20 + 19))) + v44 ;end if (v43==(0 + 0)) then v44,v45=v1(v16,v19,v19 + (9 -7) );v19=v19 + (36 -(24 + 10)) ;v43=1 -0 ;end end end v24=nil;function v24()local v46=0;local v47;local v48;local v49;local v50;while true do if (v46==((1 -0) -0)) then return (v50 * (5876458 + 10900758)) + (v49 * ((156343 -(349 + 74)) -90384)) + (v48 * (628 -(269 + (1504 -(687 + 714))))) + v47 ;end if (v46==(1378 -(1330 + 48))) then v47,v48,v49,v50=v1(v16,v19,v19 + 1 + 2 );v19=v19 + (369 -(72 + 55 + 238)) ;v46=(444 + 1) -(160 + 284) ;end end end v25=nil;v18=3;end if (4==v18) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v69=0;local v70;while true do if (v69~=(0 -0)) then else v70=0;while true do if (v70==(1 -0)) then if ((881 -(11 + 870))~=v51) then else v52={};v53={};v54={};v55={v52,v53,nil,v54};v51=1 -0 ;end break;end if (v70==(0 + 0)) then local v88=0;while true do if (v88~=(0 -0)) then else if (v51==(9 -7)) then local v108=0;while true do if (v108~=(0 -0)) then else for v114=1800 -(1561 + 238) ,v24() do local v115=0;local v116;local v117;local v118;while true do if (v115~=(3 -2)) then else v118=nil;while true do if (v116~=(4 -3)) then else while true do if (v117~=(0 -0)) then else v118=v22();if (v21(v118,1 + 0 ,1 -0 )==0) then local v152=0 -0 ;local v153;local v154;local v155;local v156;local v157;local v158;while true do if (v152==3) then while true do if (v153==(125 -(96 + 27))) then v158=nil;while true do if (v154==1) then local v355=0;while true do if (v355~=(1944 -(1236 + 707))) then else v154=2;break;end if (v355==(0 + 0)) then v157=nil;v158=nil;v355=1 + 0 ;end end end if (v154==2) then while true do if (v155==2) then local v389=0;local v390;local v391;while true do if (v389==1) then while true do if (v390==0) then v391=634 -(96 + 538) ;while true do if (v391==1) then v155=1881 -(1244 + 634) ;break;end if (v391==0) then if (v21(v157,1958 -(1447 + 510) ,1)==(1 -0)) then v158[373 -(98 + 273) ]=v57[v158[8 -6 ]];end if (v21(v157,663 -(525 + 136) ,2)==(1048 -(429 + 618))) then v158[3]=v57[v158[3]];end v391=1;end end break;end end break;end if (v389==(0 + 0)) then v390=1648 -(696 + 952) ;v391=nil;v389=1 -0 ;end end end if ((13 -10)==v155) then if (v21(v157,3,7 -4 )==(1 + 0)) then v158[1 + 3 ]=v57[v158[520 -(129 + 387) ]];end v52[v114]=v158;break;end if (v155==1) then local v393=0;local v394;local v395;while true do if (v393~=(1 + 0)) then else while true do if ((0 + 0)~=v394) then else v395=0;while true do if (v395~=(1 + 0)) then else v155=5 -3 ;break;end if ((1605 -(965 + 640))~=v395) then else v158={v23(),v23(),nil,nil};if (v156==0) then local v457=0;local v458;while true do if (v457==0) then v458=0 + 0 ;while true do if (v458==(0 -0)) then v158[3]=v23();v158[8 -4 ]=v23();break;end end break;end end elseif (v156==1) then v158[3]=v24();elseif (v156==(2 + 0)) then v158[3]=v24() -(2^16) ;elseif (v156==3) then local v469=0 -0 ;while true do if (v469==(564 -(488 + 76))) then v158[3]=v24() -((1069 -(779 + 288))^(1905 -(1405 + 484))) ;v158[7 -3 ]=v23();break;end end end v395=1;end end break;end end break;end if (v393~=(646 -(186 + 460))) then else v394=0;v395=nil;v393=1;end end end if (v155==0) then local v396=251 -(56 + 195) ;while true do if (v396==1) then v155=1;break;end if ((120 -(17 + 103))==v396) then local v418=0;while true do if ((1554 -(713 + 840))~=v418) then else v396=2 -1 ;break;end if (v418~=0) then else v156=v21(v118,2,3);v157=v21(v118,1 + 3 ,1 + 5 );v418=1;end end end end end end break;end if ((0 -0)==v154) then local v356=0;while true do if ((0 -0)==v356) then v155=0;v156=nil;v356=1;end if (1~=v356) then else v154=1;break;end end end end break;end if (v153~=1) then else local v289=0 + 0 ;while true do if (v289==(2 -1)) then v153=837 -(434 + 401) ;break;end if (v289==(0 + 0)) then v156=nil;v157=nil;v289=1 + 0 ;end end end if (v153~=(0 + 0)) then else local v290=0;while true do if (v290==(1187 -(83 + 1104))) then v154=0;v155=nil;v290=1121 -(526 + 594) ;end if (v290~=1) then else v153=1 -0 ;break;end end end end break;end if (v152==2) then v157=nil;v158=nil;v152=1745 -(1224 + 518) ;end if ((0 + 0)~=v152) then else v153=0;v154=nil;v152=1;end if (v152~=(1 + 0)) then else v155=nil;v156=nil;v152=2;end end end break;end end break;end if (v116~=(0 + 0)) then else v117=0 -0 ;v118=nil;v116=1595 -(201 + 1393) ;end end break;end if (v115~=0) then else v116=0;v117=nil;v115=1452 -(1394 + 57) ;end end end for v119=965 -(27 + 937) ,v24() do v53[v119-1 ]=v29();end v108=1;end if (1~=v108) then else for v121=1,v24() do v54[v121]=v24();end return v55;end end end if (v51~=1) then else local v109=0;while true do if (v109==0) then local v110=0;while true do if (v110==(1367 -(551 + 815))) then v109=1;break;end if (v110==0) then v56=v24();v57={};v110=1;end end end if (v109~=(478 -(421 + 55))) then else v51=2 + 0 ;break;end if (v109==(1 + 0)) then for v123=1,v56 do local v124=0;local v125;local v126;local v127;local v128;while true do if (v124==2) then while true do if (v125~=(1 + 0)) then else v128=nil;while true do if (v126~=1) then else if (v127==(1 + 0)) then v128=v22()~=(0 + 0) ;elseif (v127==2) then v128=v25();elseif (v127~=3) then else v128=v26();end v57[v123]=v128;break;end if (v126==(0 -0)) then local v130=0;local v131;local v132;while true do if (v130~=1) then else while true do if (v131==(0 + 0)) then v132=0 -0 ;while true do if (v132==(1140 -(1040 + 99))) then v126=458 -(219 + 238) ;break;end if ((0 + 0)==v132) then local v314=0;while true do if (v314==1) then v132=1;break;end if (v314~=0) then else v127=v22();v128=nil;v314=2 -1 ;end end end end break;end end break;end if (v130~=0) then else v131=1129 -(64 + 1065) ;v132=nil;v130=2 -1 ;end end end end break;end if (v125==(0 -0)) then v126=0;v127=nil;v125=1;end end break;end if (v124~=1) then else v127=nil;v128=nil;v124=2 -0 ;end if (v124~=(1103 -(175 + 928))) then else v125=0 -0 ;v126=nil;v124=1;end end end v55[10 -7 ]=v22();v109=1 + 1 ;end end end v88=1662 -(240 + 1421) ;end if (v88==1) then v70=1 + 0 ;break;end end end end break;end end end end v18=5;end if (v18==1) then function v21(v58,v59,v60)if v60 then local v74=(v58/((1432 -(588 + 842))^(v59-(1 + 0))))%((448 -(209 + 237))^(((v60-((2980 -(459 + 957)) -(1055 + 508))) -(v59-((1 -0) + 0))) + 1)) ;return v74-(v74%1) ;else local v75=(1 + 1)^(v59-(1 -0)) ;return (((v58%(v75 + v75))>=v75) and (2 -1)) or ((758 + 156) -(56 + 858)) ;end end v22=nil;function v22()local v61=v1(v16,v19,v19);v19=v19 + 1 ;return v61;end v23=nil;v18=2;end if (v18==5) then v30=nil;function v30(v62,v63,v64)local v65=0;local v66;local v67;local v68;while true do if (v65==1) then v68=v62[3];return function(...)local v81=0;local v82;local v83;local v84;local v85;local v86;while true do if (v81==0) then v82=1;v83= -1;v81=1;end if (v81==2) then v86=nil;function v86()local v89=v66;local v90=v67;local v91=v68;local v92=v28;local v93={};local v94={};local v95={};for v99=1962 -(1949 + 13) ,v85 do if ((v99>=v91) or ((3927 -(1422 + 69))==(1619 + 2870))) then v93[v99-v91 ]=v84[v99 + ((1349 -(65 + 41)) -(392 + (1219 -369))) ];else v95[v99]=v84[v99 + 1 + 0 ];end end local v96=(v85-v91) + (1292 -(153 + 1138)) ;local v97;local v98;while true do local v100=1098 -(427 + 671) ;local v101;while true do if ((v100==(437 -(18 + 419))) or ((951 -(679 + 207))>4226)) then v101=(2387 -1479) -(57 + 190 + 661) ;while true do if ((v101==(1 + 0)) or ((1777 -(1430 + 342))>486)) then if ((113==113) and (v98<=(803 -(180 + (699 -(47 + 54)))))) then if ((v98<=(9 + 3)) or ((5019 -(764 + 236 + 890))==4305)) then if ((v98<=(19 -14)) or ((2480 -(53 + 437))>=((10729 -(100 + 1633)) -4015))) then if ((3322==3322) and (v98<=(644 -(304 + 338)))) then if ((528>(669 -(77 + 288))) and (v98<=(0 + 0))) then if (((83 + 3379)==(10644 -7182)) and (v97[771 -(752 + 17) ]==v95[v97[4 + 0 ]])) then v82=v82 + (2 -1) ;else v82=v97[5 -2 ];end elseif (((3918 -(59 + 168))>=(2373 -(248 + 70))) and (v98>1)) then local v160=0 + 0 ;local v161;local v162;local v163;while true do if ((v160==((3 -2) + 0)) or (255==(1007 + 3639))) then v163=nil;while true do if ((v161==(2 -1)) or ((19012 -15088)<=(1952 + 408))) then while true do if ((v162==0) or (1672>=(4432 -(17 + 85 + 35)))) then v163=v97[697 -(16 + 134 + 545) ];v95[v163]=v95[v163]();break;end end break;end if ((v161==(0 -0)) or (1764>=(787 + 3819))) then v162=228 -(226 + 2) ;v163=nil;v161=2 -1 ;end end break;end if (((4117 -(754 + 582))>(1885 -776)) and (v160==(101 -(5 + 96)))) then v161=0 -0 ;v162=nil;v160=1 + 0 + 0 ;end end else local v164=0;local v165;local v166;local v167;while true do if ((3299==(4017 -(692 + 26))) and (v164==(266 -((216 -69) + 119)))) then v165=1878 -(315 + 1330 + 233) ;v166=nil;v164=1083 -(255 + 827) ;end if ((1==v164) or ((499 + 67)>=(6118 -3754))) then v167=nil;while true do if ((v165==0) or ((10323 -6615)<3306)) then local v291=0 -0 ;while true do if (((1674 -(431 + 229))<3738) and (v291==(0 + 0))) then v166=v97[2];v167=v95[v166];v291=1 + 0 ;end if ((116<=(4608 -((795 -446) + 560))) and (v291==(2 -1))) then v165=(1207 + 92) -(1147 + 151) ;break;end end end if ((1423<3690) and (1==v165)) then for v315=v166 + (1 -0) ,v83 do v7(v167,v95[v315]);end break;end end break;end end end elseif (((451 -221)<=4257) and (v98<=(6 -3))) then if (((2289 -(298 + 280))==1711) and (v95[v97[2 + 0 ]]==v95[v97[4]])) then v82=v82 + (1405 -(630 + 774)) ;else v82=v97[809 -(114 + 692) ];end elseif ((v98==((1892 -1020) -(849 + 19))) or ((1117 + 133 + 2731)==(1639 + 2650))) then v95[v97[2]]=v97[9 -(4 + 2) ];elseif (((2292 + 414)==2706) and (v95[v97[4 -(2 + 0) ]]<v95[v97[1306 -(540 + 762) ]])) then v82=v82 + ((615 -416) -(48 + 7 + 131 + 12)) ;else v82=v97[4 -1 ];end elseif (((5980 -(322 + 1394))>((3611 -1924) -746)) and (v98<=(1328 -(411 + 909)))) then if (((20500 -16023)==(5106 -(118 + 275 + 236))) and (v98<=(3 + 3))) then local v133=0 -0 ;local v134;while true do if ((v133==(0 -0)) or ((10098 -6450)<(2432 -(1366 + 39)))) then v134=v97[1096 -(608 + 486) ];v95[v134]=v95[v134](v13(v95,v134 + (1 -0) ,v83));break;end end elseif ((v98>(702 -(614 + 81))) or (2841>=4997)) then do return;end else v95[v97[3 -1 ]]=v95[v97[3 + 0 ]][v95[v97[1849 -(29 + 1816) ]]];end elseif ((((3045 -(448 + 983)) -957)<(2225 -(1309 + 206))) and (v98<=(16 -6))) then if ((v98==(371 -(225 + 137))) or ((3917 + 1069)==(1908 + 1519))) then v95[v97[397 -(170 + 225) ]]=v97[8 -5 ]~=(0 + 0) ;else local v174=0 -0 ;local v175;local v176;while true do if ((v174==(1 + 0)) or (472>=473)) then while true do if ((((5399 -1147) + 377)<4656) and ((311 -(126 + 185))==v175)) then v176=v97[1886 -(1743 + 141) ];do return v95[v176](v13(v95,v176 + (1 -0) ,v83));end break;end end break;end if (((0 + 0 + (0 -0))==v174) or (2456==(5477 -(1031 + 204)))) then v175=0 -0 ;v176=nil;v174=80 -(47 + 32) ;end end end elseif ((v98>11) or ((7445 -(5960 -(1322 + 533)))==(3322 -((1173 -(941 + 111)) + 312)))) then if ((v95[v97[9 -7 ]]~=v97[11 -7 ]) or (1076>=(1060 + (8884 -5642)))) then v82=v82 + 1 + 0 ;else v82=v97[892 -(703 + 186) ];end else v95[v97[1215 -(1068 + 145) ]]=v30(v90[v97[964 -(337 + 624) ]],nil,v64);end elseif (((1341 + 1600)>=(1044 + 607)) and (v98<=(184 -(55 + (2082 -(830 + 1141)))))) then if (((1438 -1051)<(4559 -(603 + 427))) and (v98<=15)) then if (((15637 -(19097 -8431))>(2129 + 204)) and (v98<=(741 -(125 + 603)))) then v95[v97[936 -(153 + 781) ]]=v63[v97[3 + 0 ]];elseif (((425 + 1741)<=3435) and (v98==(39 -25))) then local v178=0;local v179;local v180;while true do if (((378 + 402)<(12659 -8373)) and (v178==(1003 -(233 + 770)))) then v179=0 + 0 ;v180=nil;v178=1;end if (((2350 + 2098)>1894) and (v178==(1 -0))) then while true do if ((v179==0) or ((777 + 456)>=(5297 -2048))) then v180=v97[2];v95[v180]=v95[v180](v95[v180 + (1 -0) ]);break;end end break;end end elseif ((v97[6 -4 ]<v95[v97[4]]) or ((1456 -(479 + 465))>=(4893 -(622 + 31)))) then v82=v82 + 1 ;else v82=v97[3];end elseif ((v98<=16) or ((1684 + 578)>=(10565 -6866))) then local v137=0 + (0 -0) ;local v138;local v139;local v140;local v141;local v142;local v143;while true do if (((4285 -2638)<(1285 + 1414)) and (v137==(0 -0))) then v138=62 -(54 + 8) ;v139=nil;v137=1;end if ((v137==(1 + (3 -2))) or ((10977 -8183)==(83 -(44 + 0 + 3)))) then v142=nil;v143=nil;v137=3 + 0 ;end if ((((5925 + 822) -3723)>=(2269 + 457)) and ((203 -(56 + 146))==v137)) then v140=nil;v141=nil;v137=362 -(110 + (1035 -785)) ;end if ((v137==3) or ((16063 -11399)==(1353 -(158 + 70)))) then while true do if (((2136 -1139)<(8686 -5816)) and (v138==2)) then v143=nil;while true do if (((4651 -1300)>=(3989 -((1520 -893) + 410))) and (v139==(0 -0))) then local v316=0 + 0 ;while true do if (((356 + 181)<=(4692 -(352 + 746))) and ((0 + 0)==v316)) then local v378=0 -0 ;while true do if ((v378==(0 -0)) or (2600>=(10210 -5253))) then v140=v97[936 -(108 + 826) ];v141,v142=v92(v95[v140](v13(v95,v140 + 1 ,v97[4 -1 ])));v378=2 -(1 + 0) ;end if ((v378==(1 + 0)) or ((10847 -6221)==(3950 -(1265 + 719)))) then v316=(483 -142) -(185 + 155) ;break;end end end if ((v316==((3 -2) -0)) or ((3641 -(344 + 190))<(618 -386))) then v139=834 -(558 + 275) ;break;end end end if (((2909 -877)<=3499) and (v139==1)) then local v317=(0 -0) -0 ;while true do if ((3168>1612) and (v317==(0 + 0))) then local v379=55 -((547 -(119 + 375)) + 2) ;while true do if ((v379==(155 -(121 + 33))) or (483>=3651)) then v317=315 -((206 -140) + (968 -720)) ;break;end if (((7037 -2975)>(6507 -2650)) and (v379==(0 + 0))) then v83=(v142 + v140) -(2 -1) ;v143=0;v379=171 -(89 + 81) ;end end end if (((1630 + (3471 -1800))<(4770 -(66 + 26))) and (v317==(242 -(8 + 233)))) then v139=2;break;end end end if (((3783 -(3590 -1720))<=(18029 -13287)) and ((57 -(47 + (1748 -(662 + 1078))))==v139)) then for v346=v140,v83 do local v347=0 -0 ;local v348;local v349;while true do if ((v347==(1 + 0)) or ((1 + 12)>(4121 -2759))) then while true do if ((3992>=(2574 -(196 + 374))) and (v348==(559 -(12 + 547)))) then v349=131 -(117 + 14) ;while true do if ((v349==(0 + 0)) or (4074==(1203 -(28 + 706)))) then v143=v143 + 1 ;v95[v346]=v141[v143];break;end end break;end end break;end if (((686 + 2934)==(609 + 3011)) and (v347==0)) then v348=1866 -(146 + 1720) ;v349=nil;v347=1024 -(461 + 562) ;end end end break;end end break;end if (((11462 -8085)<(6568 -(369 + 1365))) and (v138==(0 -(0 + 0)))) then local v287=690 -(240 + (1475 -(531 + 494))) ;while true do if (((1 -(0 + 0))==v287) or (((50 + 285) -(34 + (2170 -(315 + 1619))))==(8883 -5776))) then v138=(3152 -(1773 + 173)) -(986 + 219) ;break;end if (((1057 + 718)==1775) and (v287==(0 + 0))) then v139=501 -(367 + 134) ;v140=nil;v287=1 -0 ;end end end if ((((1540 -(531 + 176)) + 636)<(5586 -(86 + 688))) and ((1 + 0)==v138)) then local v288=737 -(81 + 656) ;while true do if ((v288==(1827 -(981 + 846))) or (1949==(7803 -4485))) then v141=nil;v142=nil;v288=2 -1 ;end if ((v288==(1 + 0)) or ((3982 + 443)<=723)) then v138=1991 -(1319 + 670) ;break;end end end end break;end end elseif ((2643>(2431 -900)) and (v98>(2 + 15))) then v95[v97[(983 -(548 + 433)) + 0 ]]=v95[v97[7 -4 ]] -v95[v97[9 -5 ]] ;else v95[v97[2 + 0 ]][v97[(461 -(333 + 123)) -2 ]]=v97[1175 -(52 + 54 + 1065) ];end elseif ((v98<=(983 -(469 + 493))) or (2139<=(1139 -(589 + 437)))) then if ((v98<=((71 + 2) -(77 -23))) or ((1107 -(642 + 318))>=((15851 -9744) -(389 + 1172)))) then if (((3528 -2238)<(6170 -2080)) and  not v95[v97[2]]) then v82=v82 + 1 ;else v82=v97[3];end elseif ((v98>((2 -1) + 19)) or ((2487 -(947 + 210))<(368 -261))) then local v185=0;local v186;local v187;local v188;while true do if ((v185==(1 + (1295 -(29 + 1266)))) or (((329 -167) -102)>(5450 -(320 + 413)))) then v188=nil;while true do if ((((7290 -3594) -2185)==(2683 -(926 + 246))) and (v186==1)) then while true do if ((v187==(0 -0)) or ((1240 -(194 + 4 + 271))>(1505 + 1794))) then v188=v97[954 -(461 + 491) ];do return v13(v95,v188,v188 + v97[(2047 -(30 + 1764)) -(237 + 13) ] );end break;end end break;end if (((3851 -(1096 + 200))>=(3762 -(75 + 1295))) and (v186==(0 -0))) then local v295=0 + 0 + 0 ;while true do if (((500 -(305 + (449 -254)))==v295) or (((5258 -(89 + 253)) -1412)<(49 + (106 -42)))) then v187=0 + 0 ;v188=nil;v295=1 + 0 ;end if (((12322 -9075)>=(2195 -(1346 + 424))) and ((1280 -((135 -91) + 1235))==v295)) then v186=1 -0 ;break;end end end end break;end if (((5392 -(690 + 731 + 177))>=(4985 -3610)) and ((1438 -(461 + 977))==v185)) then v186=0 -0 ;v187=nil;v185=1;end end elseif (((1665 -(308 + 636))>(1094 -(360 + 72))) and (v95[v97[187 -(102 + 83) ]]~=v95[v97[9 -5 ]])) then v82=v82 + 1 ;else v82=v97[3 + 0 ];end elseif ((v98<=(1 + 22)) or (((10152 -(537 + 865)) -4528)<(4174 -(402 + 1195)))) then if (((33 + 383)<(12816 -(25200 -16908))) and (v98>(901 -((304 -208) + 783)))) then local v189=0;local v190;local v191;local v192;local v193;local v194;while true do if ((v189==(0 + 0)) or (((13145 -6759) -((5872 -4247) + 348))<=(2660 -938))) then v190=0;v191=nil;v189=1332 -(662 + 669) ;end if (((5957 -(15 + 1928))>(7560 -5259)) and (v189==((1095 -614) -(215 + 265)))) then local v280=0 + 0 ;while true do if (((4272 -(228 + 160))<=4701) and (v280==(163 -(78 + 84)))) then v189=4 -2 ;break;end if ((v280==(991 -(705 + (698 -412)))) or (315>=2917)) then v192=nil;v193=nil;v280=1719 -(1098 + 620) ;end end end if (((1008 + 546)==(1288 + 266)) and (v189==((2800 -(1481 + 371)) -(268 + 25 + 653)))) then v194=nil;while true do if (((2915 -(310 + 1687))<=(4593 -(1239 + 253))) and (v190==(0 -0))) then local v296=0 -0 ;local v297;while true do if ((v296==0) or ((1472 + 3377)<=(3027 -1986))) then v297=0 + 0 + 0 ;while true do if ((v297==((1843 -(464 + 1377)) -1)) or ((1362 + 11)>(2008 + 2139))) then v190=2 -1 ;break;end if ((v297==(789 -(455 + 334))) or ((2809 -((2183 -(1739 + 183)) + 49))<=(7596 -5330))) then local v397=0;while true do if ((v397==(0 -0)) or ((2307 -(248 + 38))<=(838 -428))) then v191=v97[38 -(16 + 20) ];v192,v193=v92(v95[v191](v95[v191 + 1 ]));v397=1;end if (((1979 + 2052)>=((789 + 5492) -3540)) and (v397==1)) then v297=2 -1 ;break;end end end end break;end end end if (((3834 + 712)>4002) and (v190==(1 + (1338 -(620 + 717))))) then for v318=v191,v83 do local v319=0 + 0 + 0 ;local v320;while true do if (((649 -(603 + 46))==v319) or ((263 + 2244)>(2662 + 2301))) then v320=465 -(358 + 107) ;while true do if (((1179 + 535)<=(807 + 4001)) and (v320==0)) then v194=v194 + 1 + 0 ;v95[v318]=v192[v194];break;end end break;end end end break;end if ((v190==1) or ((4358 -2344)<(444 -158))) then local v298=1413 -(1202 + 211) ;while true do if ((185==185) and (v298==((3 -1) -(3 -2)))) then v190=1 + 1 ;break;end if ((((2536 + 1198) -(1355 + 18))>=(5591 -(8071 -4273))) and (v298==(0 -0))) then v83=(v193 + v191) -(1 + (230 -(150 + 80))) ;v194=0 + 0 ;v298=1 -(0 -0) ;end end end end break;end end else local v195=0 -0 ;local v196;local v197;local v198;local v199;while true do if (((0 + 0)==v195) or (1925<(1471 -906))) then v196=0 -0 ;v197=nil;v195=(686 -(538 + 146)) -1 ;end if ((((6092 -3498) + 1202)>=(1537 + 169)) and ((1 + (1 -0))==v195)) then while true do if ((v196==(0 + 0)) or (346>(1969 -1252))) then v197=45 -((25 -15) + 35) ;v198=nil;v196=(156 + 70) -(27 + 198) ;end if ((v196==(1 + 0)) or ((365 + 678)==(2902 -(69 + 35)))) then v199=nil;while true do if ((4175>=2603) and (v197==(582 -((304 -111) + (1567 -1178))))) then local v362=0;local v363;while true do if ((v362==(1940 -(660 + (1947 -(372 + 295))))) or (4269<(1354 -(340 + 981)))) then v363=0;while true do if (((538 -(205 + 332))==v363) or ((4 + 3646)<=(8235 -6579))) then v197=656 -(221 + 434) ;break;end if ((((3293 -1840) -(372 + 159 + 214))>(1598 -(391 + 894))) and (v363==((2318 -1142) -(69 + 1107)))) then local v420=1233 -(683 + 550) ;while true do if (((3722 -2577)==(2718 -(808 + 613 + 152))) and (v420==(0 + (1325 -(1034 + 291))))) then v198=v97[374 -(4 + 61 + 307) ];v199=v95[v97[122 -(79 + 40) ]];v420=1 -0 ;end if ((v420==(461 -(36 + 424))) or ((952 + (4234 -3347))>=(2785 -(101 + 218)))) then v363=3 -2 ;break;end end end end break;end end end if (((7339 -3684)>=(3446 -1346)) and (v197==(1 + (0 -0)))) then v95[v198 + 1 ]=v199;v95[v198]=v199[v97[4]];break;end end break;end end break;end if (((7922 -3976)>(186 + 1089)) and (v195==(1 + 0))) then v198=nil;v199=nil;v195=8 -6 ;end end end elseif ((v98>(8 + 16)) or ((1666 + 819)>=(2001 + 899))) then local v200=0 -0 ;local v201;local v202;while true do if ((v200==(1400 -(85 + (1990 -(338 + 337))))) or ((1445 + 184)==(4215 -(1141 + 686)))) then v201=0 + 0 ;v202=nil;v200=1;end if (((2 + 927)<(17042 -12131)) and (v200==1)) then while true do if (((0 + 0)==v201) or ((1980 + 652)>=(10140 -6801))) then v202=v97[5 -3 ];v95[v202](v13(v95,v202 + 1 ,v97[3]));break;end end break;end end else local v203=0;local v204;local v205;local v206;while true do if (((6391 -4781)<=(8010 -4296)) and (v203==(0 + 0 + 0))) then local v281=(1181 -(928 + 253)) -0 ;while true do if (((2069 + 2185)>=(8760 -5916)) and (v281==0)) then v204=0;v205=nil;v281=1;end if (((449 + 3249)==(10375 -(7798 -(813 + 308)))) and (v281==(3 -2))) then v203=(1 -0) + 0 ;break;end end end if ((1==v203) or ((2643 -1332)==(4247 -2538))) then v206=nil;while true do if ((((1956 -(24 + 1195)) + 1833)>(1793 -1096)) and (v204==(0 -0))) then local v300=(119 -(45 + 74)) + 0 ;while true do if (((3809 + 162)>(2240 -(929 + 143))) and (v300==1)) then v204=1 -0 ;break;end if ((v300==(1388 -(652 + 736))) or (((1020 -561) + 238)<(1893 -(1452 + 120)))) then v205=v97[4 -2 ];v206={};v300=361 -(210 + 150) ;end end end if (((1623 + 1507)>=((3158 -(1110 + 562)) -(723 + 378))) and ((3 -2)==v204)) then for v321=1756 -(568 + 1187) , #v94 do local v322=0;local v323;local v324;local v325;while true do if ((v322==((3306 -(1528 + 314)) -(1406 + (1518 -(1456 + 4))))) or ((9581 -6560)<(7005 -4329))) then v323=542 -(479 + 63) ;v324=nil;v322=1 + 0 ;end if (((1875 + 3067)>(2099 -(1108 + 772))) and (v322==1)) then v325=nil;while true do if (((294 + (5847 -4344))>(140 + 183)) and (v323==(2 -1))) then while true do if (((0 + 0)==v324) or ((1792 -(156 + 157))<=((1978 -(1123 + 709)) + (2607 -(839 + 573))))) then v325=v94[v321];for v435=0, #v325 do local v436=0;local v437;local v438;local v439;local v440;while true do if ((2234<(9926 -(4656 + 1297))) and (v436==((379 + 279) -(644 + 12)))) then while true do if ((171==171) and (v437==1)) then v440=v438[1 + (2 -1) ];if (((v439==v95) and (v440>=v205)) or ((2156 -(254 + (3535 -2726)))>4972)) then local v463=0;local v464;local v465;while true do if (((171 + 91)<=((11425 -8490) -1949)) and (((0 + 0) -(0 -0))==v463)) then v464=0 + 0 ;v465=nil;v463=1 + 0 ;end if ((2193==(3144 -(263 + 688))) and (1==v463)) then while true do if (((4754 -(1493 + 1191))<=(75 + 4490)) and ((330 -(327 + 3))==v464)) then v465=0 + 0 ;while true do if (((620 + 22)<(3434 -1341)) and (v465==(355 -(306 + 49)))) then v206[v440]=v439[v440];v438[1 -0 ]=v206;break;end end break;end end break;end end end break;end if ((((0 -0) + 0)==v437) or ((8518 -4275)<=(1120 + 7))) then local v460=0 -0 ;local v461;while true do if (((13532 -8599)>(13497 -9251)) and (v460==0)) then v461=0 -(0 -0) ;while true do if (((1866 -709)==(634 + (1004 -(230 + 251)))) and (((383 + 195) -(414 + (2087 -(670 + 1253))))==v461)) then local v470=0 + 0 ;while true do if (((5560 -(18 + 1408))>(2893 -1886)) and (v470==1)) then v461=306 -(105 + 200) ;break;end if ((v470==(0 + 0)) or (3038<=(992 + 850))) then v438=v325[v435];v439=v438[1 + 0 ];v470=874 -((329 -201) + 745) ;end end end if ((v461==(3 -2)) or (1421>=4665)) then v437=2 -(1384 -(1134 + 249)) ;break;end end break;end end end end break;end if (((47 + 823)<=(3053 -(248 + 18))) and (v436==1)) then local v450=0 -(0 + 0) ;while true do if ((v450==(1 -0)) or (((9387 -4772) -(1220 + 27))<(10432 -8250))) then v436=2;break;end if (((4786 -1405)==(4583 -1202)) and (0==v450)) then v439=nil;v440=nil;v450=743 -(161 + 457 + 124) ;end end end if (((2591 -(3309 -(23 + 1716)))<=(10213 -6649)) and ((0 + 0)==v436)) then v437=1626 -(824 + 802) ;v438=nil;v436=1258 -(40 + 1217) ;end end end break;end end break;end if ((0==v323) or ((1965 -(326 + 1041))==(5758 -1284))) then local v404=0 + 0 ;while true do if ((v404==(0 + 0)) or (581>(4120 -2741))) then v324=0 -0 ;v325=nil;v404=1 + 0 ;end if ((v404==(910 -(477 + 432))) or ((7896 -3022)<(125 + 22 + 736))) then v323=1121 -(187 + 933) ;break;end end end end break;end end end break;end end break;end end end elseif ((v98<=(102 -64)) or ((3884 -2915)==(1405 + 35))) then if ((2756==(8076 -5320)) and (v98<=(5 + 26))) then if ((v98<=(13 + 15)) or ((30 -14)>(31 + 122))) then if ((v98<=(1507 -(222 + 1259))) or (3219==(139 + 2577))) then local v144=0 -0 ;local v145;local v146;local v147;while true do if ((v144==(0 + 0)) or (2865<(16 + 549))) then v145=0 + 0 ;v146=nil;v144=1 + 0 ;end if (((6473 -(11 + 1571))>=(682 + 1992)) and (v144==1)) then v147=nil;while true do if ((v145==(0 -0)) or ((882 + 2684)<2045)) then v146=1232 -(1129 + (302 -199)) ;v147=nil;v145=2 -1 ;end if ((v145==(1 -0)) or ((1498 -(1063 + 361))>=(5623 -2513))) then while true do if (((12239 -8337)>((2504 -(462 + 734)) -(662 + 547))) and (v146==(919 -(486 + 432)))) then for v350=v147,v83 do local v351=626 -(583 + 43) ;local v352;local v353;local v354;while true do if (((3163 -((3026 -1839) + 606))<=(2806 + 928)) and (v351==(3 -2))) then v354=nil;while true do if (((1416 -792)==(140 + (2193 -(882 + 827)))) and (v352==1)) then while true do if ((v353==(0 -0)) or ((9441 -4490)<=(1367 -(32 + 276)))) then v354=v93[v350-v147 ];v95[v350]=v354;break;end end break;end if ((v352==0) or ((96 + 2277)<(40 + 3))) then v353=0 + 0 ;v354=nil;v352=1;end end break;end if ((v351==(0 -0)) or ((5099 -3310)<39)) then v352=0 + 0 ;v353=nil;v351=1;end end end break;end if (((20493 -15510)>=(5541 -(1298 + 212))) and (v146==(1027 -(975 + 52)))) then local v326=0 + (1939 -(15 + 1924)) ;while true do if (((1725 -(1249 + 476))==v326) or ((510 + 1612)==(1878 -1224))) then v147=v97[1 + 1 ];v83=(v147 + v96) -(1 + 0) ;v326=1;end if ((v326==(1 -0)) or (2245<=(1522 -668))) then v146=1;break;end end end end break;end end break;end end elseif (((11708 -(16602 -8976))>(433 -(88 + 95))) and (v98>(48 -21))) then local v207=v97[362 -(171 + 189) ];local v208=v97[(846 + 772) -(1248 + 366) ];local v209=v207 + 2 ;local v210={v95[v207](v95[v207 + 1 ],v95[v209])};for v266=1191 -(658 + 532) ,v208 do v95[v209 + v266 ]=v210[v266];end local v211=v210[2 -1 ];if (((1790 + 1978)==(281 + 3487)) and v211) then local v275=0 + 0 ;local v276;local v277;while true do if ((v275==(0 -0)) or ((319 -(260 + 15 + 21))==(10947 -6922))) then v276=1832 -(43 + 1789) ;v277=nil;v275=1 + 0 ;end if ((v275==1) or (((5434 -(370 + 45)) -(768 + 826))>=(6657 -(1524 + 472)))) then while true do if ((v276==(1339 -(557 + (1096 -314)))) or ((2666 -(190 + 312))<1252)) then v277=0 -0 ;while true do if (((5717 -(683 + 956))>=(2900 + 76)) and (v277==(0 + 0))) then v95[v209]=v211;v82=v97[2 + 1 ];break;end end break;end end break;end end else v82=v82 + (3 -2) ;end else local v212=(0 + 0) -0 ;local v213;local v214;local v215;local v216;while true do if ((v212==(1 + 1)) or ((1493 + 478)==(3803 + 958))) then while true do if ((v213==(0 + 0)) or ((2762 -(193 + (1265 -(154 + 467))))<=263)) then local v301=1647 -(1562 + 85) ;while true do if ((v301==(152 -(62 + 89))) or ((32 + 692)<274)) then v213=1;break;end if ((2311<(2770 + 980)) and ((0 + 0)==v301)) then v214=v90[v97[1705 -(379 + 1323) ]];v215=nil;v301=1434 -(1090 + 343) ;end end end if ((v213==(2 + (0 -0))) or ((2497 + 993)<=(5575 -2417))) then for v327=1304 -(510 + 793) ,v97[1 + 3 ] do local v328=700 -(424 + 276) ;local v329;local v330;while true do if ((((2553 + 2283) -(547 + 83))==(5344 -(656 + 482))) and (v328==(4 -3))) then while true do if (((0 + 0)==v329) or ((5748 -(1064 + 310))>=(5659 -(534 + 560)))) then local v405=0 + 0 ;while true do if ((v405==(1 + 0)) or (3161<=(838 + 2179))) then v329=1 + 0 ;break;end if ((v405==(0 + 0 + 0)) or ((2792 -(76 + 953))>4301)) then v82=v82 + (1467 -(590 + 876)) ;v330=v89[v82];v405=2 -(1 + 0) ;end end end if (((1 -0)==v329) or (219>=(367 + 650))) then if ((v330[1554 -(83 + 1470) ]==(6 + 30)) or ((7999 -4200)<(10959 -7850))) then v216[v327-((2 -1) + (118 -(30 + 88))) ]={v95,v330[354 -(34 + 317) ]};else v216[v327-(1 + 0) ]={v63,v330[776 -(28 + 308 + 437) ]};end v94[ #v94 + (1679 -(1570 + 108)) ]=v216;break;end end break;end if ((v328==((0 -0) + 0)) or ((1112 + 944)>(1225 + 1310 + 1048))) then v329=0 + 0 ;v330=nil;v328=1 + 0 ;end end end v95[v97[952 -(524 + 426) ]]=v30(v214,v215,v64);break;end if ((v213==1) or ((257 + 184)>(1724 + 2494))) then v216={};v215=v10({},{__index=function(v331,v332)local v333=0;local v334;local v335;while true do if ((v333==(1 + 0)) or ((1356 + 3209)<(917 -(634 + 267)))) then while true do if (((71 + 329)<=(7944 -3119)) and (v334==0)) then v335=v216[v332];return v335[139 -(10 + 128) ][v335[2]];end end break;end if (((0 -0)==v333) or ((1145 + 2768)==(8573 -4087))) then v334=0 + 0 + (0 -0) ;v335=nil;v333=1 + 0 ;end end end,__newindex=function(v336,v337,v338)local v339=0 + 0 + 0 ;local v340;while true do if ((v339==0) or ((1983 + 2878)<=(10730 -7539))) then v340=v216[v337];v340[1666 -(298 + 1367) ][v340[2]]=v338;break;end end end});v213=2;end end break;end if ((v212==1) or ((862 -526)>(11350 -6814))) then v215=nil;v216=nil;v212=668 -(196 + 470) ;end if ((((1288 + 2296) -1341)==(6285 -4042)) and (v212==(0 + 0))) then v213=0 + 0 ;v214=nil;v212=1 -0 ;end end end elseif ((v98<=(28 + 1)) or ((325 + 226)==(21486 -16766))) then v95[v97[5 -3 ]]=v95[v97[3]] + v95[v97[3 + 1 ]] ;elseif ((4967<(687 + 4289)) and (v98>30)) then local v217=0 + 0 ;local v218;local v219;local v220;local v221;while true do if ((308<4693) and (v217==(4 -2))) then while true do if (((8031 -5289)>(830 + 1527)) and (v218==(957 -((1556 -(868 + 419)) + 687)))) then v221=0;for v341=v219,v97[14 -(351 -(217 + 124)) ] do local v342=284 -(194 + 90) ;local v343;local v344;while true do if ((((6559 -4828) -1285)<=(2291 + 912)) and (v342==0)) then v343=0;v344=nil;v342=3 -2 ;end if ((((151 -63) + 396)<=2010) and (v342==(1 + 0))) then while true do if ((v343==(0 + 0)) or ((3959 -(1272 + 576))==1222)) then v344=0 -0 ;while true do if (((2260 + 1613)>(65 + 61)) and (v344==(0 + 0))) then v221=v221 + (2 -1) ;v95[v341]=v220[v221];break;end end break;end end break;end end end break;end if ((v218==((446 -(272 + 174)) + 0)) or ((2946 -1298)==((7088 -(1864 + 118)) -3393))) then local v303=0;local v304;while true do if ((v303==(160 -(26 + 134))) or (((5868 -(186 + 473)) -938)>(4748 -(236 + 217)))) then v304=0 -0 ;while true do if ((500<=(5219 -3254)) and (v304==0)) then v219=v97[2];v220={v95[v219](v13(v95,v219 + 1 ,v83))};v304=1;end if ((v304==(1 + (0 -0))) or ((430 + 439)>((16620 -11933) -(170 + 698)))) then v218=4 -3 ;break;end end break;end end end end break;end if (((0 -0)==v217) or ((2167 + 801 + 377)>=(6601 -2914))) then local v282=0 + 0 ;while true do if ((v282==(1141 -(999 + (1425 -(892 + 391))))) or (4736<(335 + 785))) then v218=0 + 0 ;v219=nil;v282=1 -0 ;end if (((4332 -(10 + 5))>(7672 -4205)) and (v282==(1 + 0))) then v217=298 -(5 + 120 + 172) ;break;end end end if (((2446 + 240)<=(4175 + 84)) and (v217==(13 -(10 + 2)))) then local v283=0 -(0 + 0) ;while true do if (((1282 + 43)==(612 + 713)) and (v283==0)) then v220=nil;v221=nil;v283=1162 -(1137 + (1773 -(310 + 1439))) ;end if (((12200 -7705)<=4788) and (v283==(1470 -(830 + 639)))) then v217=1 + 0 + 1 ;break;end end end end else v95[v97[(1140 -623) -(221 + 134 + 160) ]]={};end elseif ((v98<=((115 + 584) -(185 + (798 -318)))) or (4028<=((6399 -2847) -2018))) then if ((v98<=(807 -(130 + 321 + 324))) or ((4743 -(45 + (1212 -(63 + 123))))==(1196 + 2057))) then if ((v95[v97[8 -6 ]]==v97[6 -2 ]) or (4720<=(2987 -(82 + 231)))) then v82=v82 + 1 + 0 ;else v82=v97[88 -(53 + 32) ];end elseif ((v98>(85 -(9 + 43))) or (((1345 -(335 + 138)) + 1892)<=(1692 -((1950 -(1119 + 730)) + 925)))) then if (v95[v97[31 -(16 + 13) ]] or (((9170 -6810) + 1659)<(3396 -(40 + 240)))) then v82=v82 + (3 -2) ;else v82=v97[3 + 0 ];end else v64[v97[225 -(54 + (1859 -(1278 + 413))) ]]=v95[v97[5 -3 ]];end elseif (((1342 -(671 + 186))<(870 + 3136)) and (v98<=(1947 -(894 + 1017)))) then if (((10235 -6882)==(119 + 3234)) and (v98>(111 -(356 -280)))) then v95[v97[7 -5 ]]=v95[v97[4 -1 ]];else local v228=1964 -(376 + 1588) ;local v229;local v230;local v231;while true do if ((v228==(0 + 0)) or ((5485 -3646)==(628 + 3030))) then v229=0;v230=nil;v228=1;end if ((1==v228) or (((5758 -4565) + 1675)==(945 -373))) then v231=nil;while true do if ((v229==1) or (((1452 + 809) -(734 + 474))>=(1997 -((1513 -1165) + 591)))) then for v345=v230 + 1 ,v97[6 -2 ] do v231=v231   .. v95[v345] ;end v95[v97[4 -2 ]]=v231;break;end if (((8572 -6209)>=(1377 + 504)) and (v229==(304 -(69 + 235)))) then local v306=0;while true do if ((v306==0) or (4810<(8 + 162))) then v230=v97[12 -9 ];v231=v95[v230];v306=1365 -(364 + 1000) ;end if (((1424 + 695)<=(11929 -(6170 + 1329))) and ((1 + 0)==v306)) then v229=1;break;end end end end break;end end end elseif (((4900 -(138 + 987))==(3729 + (219 -173))) and (v98>(382 -(302 + 43)))) then v95[v97[2 + 0 ]]= #v95[v97[1693 -(1169 + 521) ]];elseif ((v97[2 -0 ]<v95[v97[4 + 0 ]]) or ((3509 -(573 + 167 + 1008))<1199)) then v82=v97[957 -(352 + 602) ];else v82=v82 + (1 -(0 + 0)) ;end elseif ((v98<=45) or ((144 + 255)>=(856 + 3488))) then if (((1414 + 2954)>(3868 -(930 + 10))) and (v98<=41)) then if ((v98<=(415 -(310 + 66))) or ((648 + 579 + 1113)==(4689 -2710))) then v95[v97[3 -1 ]]=v95[v97[244 -(97 + 115 + 29) ]][v97[595 -(451 + 140) ]];elseif ((1845>=(2449 -1123)) and (v98==(83 -43))) then do return v95[v97[2 + 0 ]];end else v95[v97[2]][v97[970 -(250 + 717) ]]=v95[v97[4]];end elseif ((v98<=(1 + 8 + 34)) or ((2550 + 80)<=(208 + 587))) then if ((((12680 -7878) -(19 + 739))>(886 -355)) and (v98>(1874 -(954 + 878)))) then for v269=v97[1515 -(1377 + 136) ],v97[(2660 -(1285 + 51)) -(398 + 923) ] do v95[v269]=nil;end else v95[v97[106 -(6 + 98) ]]=v95[v97[5 -(4 -2) ]] * v95[v97[1516 -(709 + 803) ]] ;end elseif ((v98==((154 + 7) -117)) or ((136 + 453)==3876)) then v95[v97[2]]();else local v236=1683 -(1099 + 584) ;local v237;local v238;local v239;local v240;local v241;while true do if ((((1433 -891) + (4011 -2155))<(11027 -6449)) and (v236==1)) then v239=nil;v240=nil;v236=(1379 -(901 + 474)) -2 ;end if ((v236==((0 -0) -0)) or ((1365 -(344 + 71))>=3804)) then v237=0;v238=nil;v236=1 + 0 + 0 ;end if (((3109 + 1001)>(4394 -(259 + 938))) and (v236==((143 -(132 + 9)) + 0))) then v241=nil;while true do if ((v237==(3 -2)) or ((9626 -5677)==(344 + 2617))) then local v307=0 + 0 ;while true do if (((2287 -1092)<(4046 -(43 + 71))) and (v307==(1 -0))) then v237=1234 -(838 + 394) ;break;end if (((788 + 358)>=(790 -(71 + 54 + 430))) and ((496 -(267 + 229))==v307)) then v240=nil;v241=nil;v307=1 + 0 ;end end end if ((v237==(2 + 0)) or ((1910 -(1427 + 36))>(1031 + 2185))) then while true do if (((65 + 831)<=2015) and ((1639 -(1222 + 417))==v238)) then local v371=1958 -(404 + 1477 + 77) ;while true do if ((((7968 -2549) -(1771 + (1949 -(1613 + 288))))<=(4753 -(697 + 194))) and (v371==0)) then v239=v97[(1762 -(905 + 855)) + 0 + 0 ];v240={v95[v239](v13(v95,v239 + (1435 -(14 + 1420)) ,v97[4 -1 ]))};v371=919 -(29 + 889) ;end if (((6471 -4525)<((3308 -(217 + 768)) + 1701)) and (v371==1)) then v238=1 + 0 ;break;end end end if ((((7233 -5180) + 291)<=(8864 -4552)) and (v238==1)) then v241=0;for v383=v239,v97[4] do local v384=645 -((2041 -(112 + 1669)) + 385) ;local v385;local v386;while true do if (((264 -(117 + 146))==v384) or (541>=3117)) then while true do if ((v385==(1254 -((1419 -(98 + 1167)) + 1100))) or (1783>(3885 -(42 + 443)))) then v386=0;while true do if ((2068==2068) and (v386==(0 -0))) then v241=v241 + (3 -2) ;v95[v383]=v240[v241];break;end end break;end end break;end if (((2773 + 255)<(2009 + 1732)) and (v384==0)) then v385=293 -(222 + 71) ;v386=nil;v384=1 + 0 ;end end end break;end end break;end if (((2784 -(1059 + 317))<=(5136 -(208 + 53))) and ((1795 -(953 + 842))==v237)) then local v308=0 -0 ;while true do if (((1958 -(402 + 507))>=(281 -186)) and (v308==(0 + (0 -0)))) then v238=1765 -(730 + 1035) ;v239=nil;v308=1287 -(166 + 1120) ;end if ((v308==(2 -1)) or ((2654 -(1119 + 434))>=(1935 -(258 + 551)))) then v237=4 -3 ;break;end end end end break;end end end elseif ((v98<=48) or ((1544 -542)>(3013 -(1017 + 617)))) then if ((v98<=46) or (1040==(3274 -(1639 + 327)))) then v82=v97[1 + (778 -(205 + 571)) ];elseif ((v98>47) or ((1530 -1000)>(6998 -4945))) then local v242=(533 -(324 + 106)) -(51 + 52) ;local v243;local v244;local v245;local v246;local v247;while true do if ((v242==1) or ((2565 + 802)<=((2538 + 1200) -(157 + 156 + 130)))) then v245=nil;v246=nil;v242=(2487 -(627 + 1121)) -(486 + 251) ;end if (((1840 -648)<=((12230 -(509 + 124)) -7207)) and (v242==(1767 -(1578 + 189)))) then v243=0 + 0 ;v244=nil;v242=1;end if (((1301 + 517)>=1080) and (2==v242)) then v247=nil;while true do if (((3161 -1424)<1923) and (v243==(1 + 1))) then while true do if (((4242 -(211 + 735))==(8850 -5554)) and (v244==(2 -0))) then if (((393 -146)<3769) and (v246>0)) then if ((((2707 -1766) + 181)<(4545 -(1130 + 830))) and (v247<=v95[v245 + 1 ])) then local v408=0;while true do if (((5691 -2301)>=(3147 -(1122 + 478))) and (v408==(1169 -((1067 -529) + 631)))) then v82=v97[1634 -(1190 + 441) ];v95[v245 + 3 ]=v247;break;end end end elseif ((2468<=(5784 -(868 + 730))) and (v247>=v95[v245 + (1868 -(1531 + (1694 -(641 + 717)))) ])) then local v409=0;local v410;local v411;while true do if (((0 + 0)==v409) or ((6076 -(936 + 245))<=4265)) then v410=0;v411=nil;v409=(1850 -(1463 + 386)) + 0 ;end if (((2532 + 2143)>=(2423 + 1826)) and (v409==(1 + 0))) then while true do if ((v410==(0 + 0)) or ((23 + 0)>=(7748 -3770))) then v411=(478 -(112 + 366)) + 0 ;while true do if ((v411==(307 -(253 + 54))) or ((3649 -2294)>=(4426 + 313))) then v82=v97[1 + 2 ];v95[v245 + (10 -7) ]=v247;break;end end break;end end break;end end end break;end if (((3950 -(143 + 1831))<4203) and ((1 + 0)==v244)) then local v372=0 + 0 ;local v373;while true do if (((2565 -(1214 + 345))==((580 + 1833) -(1347 + 60))) and (v372==(0 + 0))) then v373=1417 -((695 -(530 + 101)) + 533 + 820) ;while true do if ((v373==(1154 -(63 + 1091))) or ((3542 -(406 + 348))<(1833 -(1350 + 60)))) then local v423=301 -(104 + (2153 -(1644 + 312))) ;while true do if (((1808 -(714 + 1094))==v423) or ((6951 -3973)<2402)) then v247=v95[v245] + v246 ;v95[v245]=v247;v423=1 + 0 ;end if ((v423==(422 -(192 + 229))) or ((2841 -(172 + 65))>=((5398 -(207 + 1074)) -(190 + 132)))) then v373=1 + 0 + 0 ;break;end end end if ((1==v373) or ((706 -354)==2090)) then v244=544 -(186 + 356) ;break;end end break;end end end if ((v244==(0 -0)) or (284>(1359 -469))) then local v374=0 + 0 ;local v375;while true do if (((6120 -4029)<=(4721 -1289)) and (v374==(0 -0))) then v375=1099 -(699 + 400) ;while true do if (((1320 -(69 + 70))<=1536) and ((0 -0)==v375)) then local v424=0 -0 ;while true do if ((1==v424) or ((455 + 50)>=(5971 -3584))) then v375=1316 -(57 + 1258) ;break;end if ((v424==((0 -0) -0)) or ((1280 + 648)>2688)) then v245=v97[4 -2 ];v246=v95[v245 + (5 -3) ];v424=4 -3 ;end end end if ((4648>=(2640 -(1793 + 162))) and ((1 -0)==v375)) then v244=1;break;end end break;end end end end break;end if (((2802 -(658 + 222))<=(3696 -(334 + 151))) and (v243==(0 + 0))) then local v309=0 + 0 ;while true do if ((1==v309) or ((230 + 2406)>=(2619 + 588))) then v243=1;break;end if ((v309==(0 -0)) or (((2410 -(880 + 659)) + 2896)>3780)) then v244=0 -0 ;v245=nil;v309=(1749 -(1667 + 81)) + 0 ;end end end if (((158 + 177)==(1466 -1131)) and (v243==(2 -1))) then v246=nil;v247=nil;v243=2 -0 ;end end break;end end else v95[v97[1578 -(1065 + 511) ]]=v64[v97[3]];end elseif ((v98<=(14 + 36)) or ((166 + (1461 -(123 + 1242)))>=(322 + 1102))) then if ((v98==(8 + 41)) or ((13912 -9920)<(5840 -4022))) then local v250=0;local v251;local v252;while true do if (((3445 + 1120)==(5403 -(404 + 434))) and ((1122 -(525 + 596))==v250)) then while true do if ((v251==(1987 -(1932 + 55))) or (((30266 -22970) -4261)<=1028)) then v252=v97[1483 -(27 + 1190 + 264) ];do return v13(v95,v252,v83);end break;end end break;end if (((12430 -9007)<(8925 -4129)) and (v250==(0 + 0))) then v251=0;v252=nil;v250=1 + 0 ;end end else local v253=0 + 0 ;local v254;while true do if ((0==v253) or ((2670 -(293 + 185))>=3170)) then v254=v97[2];v95[v254]=v95[v254](v13(v95,v254 + 1 + (948 -(5 + 943)) ,v97[3]));break;end end end elseif ((v98==(51 + 0)) or ((221 + 563)>=(2417 -(34 + 142)))) then local v255=0;local v256;local v257;while true do if (((3054 -(6 + 4))==(6700 -3656)) and (v255==(1305 -(552 + 753)))) then local v286=0 + 0 + 0 ;while true do if (((5578 -(869 + 59))>=(1053 + 599)) and (v286==(0 -0))) then v256=0 + 0 ;v257=nil;v286=1;end if ((v286==(1 + 0 + 0)) or (816>(3460 -2523))) then v255=1;break;end end end if ((((11529 -5234) -(1204 + 374))==(2289 + 2428)) and (v255==(1 + 0))) then while true do if (((270 + (3655 -1468))==2457) and (v256==0)) then v257=v97[2];v95[v257](v95[v257 + 1 ]);break;end end break;end end else local v258=0;local v259;local v260;local v261;local v262;local v263;while true do if (((9066 -(5683 -(226 + 879)))==(768 + 3720)) and (0==v258)) then v259=1502 -(145 + 1357) ;v260=nil;v258=1 + 0 ;end if (((3712 -(16 + 356))>=(600 -168)) and (v258==(1 -0))) then v261=nil;v262=nil;v258=2;end if (((3 -1)==v258) or ((5749 -2899)>(71 + 3235))) then v263=nil;while true do if ((v259==0) or (4040>=(4852 -(369 + 258)))) then local v312=0 -0 ;while true do if ((v312==1) or (1634<=(443 + 1018))) then v259=1851 -(1225 + 625) ;break;end if ((v312==(0 + 0)) or ((2937 -(113 + 89))>=(5936 -(56 + 1248)))) then v260=354 -(6 + 348) ;v261=nil;v312=1;end end end if (((6077 -((2067 -(1191 + 447)) + (2875 -(509 + 1399))))>=(3996 -(742 + 65))) and (v259==(2 -0))) then while true do if ((v260==(913 -(99 + 814))) or ((417 + 239)==(4889 -3541))) then local v376=(175 -(142 + 33)) + 0 ;while true do if ((v376==(1 -0)) or ((5717 -(935 + 697))==(2123 + 2483))) then v260=1 + 0 ;break;end if ((1855>=(501 + 28)) and (0==v376)) then local v400=0 + 0 ;while true do if (((0 -0)==v400) or (((1005 -(671 + 314)) + 514)>=(3243 -(1345 + 38)))) then v261=v97[176 -(90 + 84) ];v262=v95[v261];v400=1553 -(1274 + 169 + 109) ;end if (((1602 -713)<(5591 -(497 + 742))) and (v400==(1276 -((2025 -(1009 + 421)) + 680)))) then v376=1359 -(202 + 1156) ;break;end end end end end if ((3524>=(478 -309)) and (v260==(1 + 0))) then v263=v95[v261 + 2 ];if (((514 -398)<=(6332 -3650)) and (v263>(0 -0))) then if ((4905>(3646 -1244)) and (v262>v95[v261 + 1 + 0 ])) then v82=v97[3];else v95[v261 + (10 -(4 + 3)) ]=v262;end elseif (((421 + 407)<=(252 + 1106)) and (v262<v95[v261 + 1 ])) then v82=v97[5 -2 ];else v95[v261 + (8 -5) ]=v262;end break;end end break;end if ((((2570 -1789) + (562 -(112 + 272)))<4218) and (v259==(1 -0))) then local v313=1569 -(1307 + 262) ;while true do if ((((2711 -848) -((242 -135) + 161))<=(2515 + 1262)) and (v313==(1 -0))) then v259=(2125 -(1613 + 359)) -(43 + 108) ;break;end if (((5965 -3925)<=(4865 -(565 + 416))) and (v313==(0 -0))) then v262=nil;v263=nil;v313=312 -(94 + 217) ;end end end end break;end end end v82=v82 + (646 -(490 + (864 -(372 + 337)))) ;break;end if (((0 -0)==v101) or ((1865 -(888 + 377))>((10585 -7050) -(195 + 355)))) then v97=v89[v82];v98=v97[2 -1 ];v101=1;end end break;end end end end v81=3;end if (v81==1) then v84={...};v85=v12("#",...) -1 ;v81=2;end if (v81==3) then A,B=v28(v11(v86));if  not A[1] then local v102=0;local v103;while true do if (0==v102) then v103=v62[4][v82] or "?" ;error("Script error at ["   .. v103   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end end end;end if (v65==0) then v66=v62[1];v67=v62[2];v65=1;end end end return v30(v29(),{},v17)(...);end end end vv9(),...);end
